# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/articles:
        get:
            tags:
                - Article
            operationId: Article_ListArticles
            parameters:
                - name: tag
                  in: query
                  schema:
                    type: string
                - name: author
                  in: query
                  schema:
                    type: string
                - name: favorited
                  in: query
                  schema:
                    type: string
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.article.v1.ArticlesReply'
        post:
            tags:
                - Article
            operationId: Article_CreateArticle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.article.v1.CreateArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.article.v1.ArticleReply'
    /api/articles/feed:
        get:
            tags:
                - Article
            operationId: Article_FeedArticles
            parameters:
                - name: limit
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.article.v1.ArticlesReply'
    /api/articles/{slug}:
        get:
            tags:
                - Article
            operationId: Article_GetArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.article.v1.ArticleReply'
        put:
            tags:
                - Article
            operationId: Article_UpdateArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.article.v1.UpdateArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.article.v1.ArticleReply'
        delete:
            tags:
                - Article
            operationId: Article_DeleteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.article.v1.DeleteArticleReply'
    /api/articles/{slug}/comments:
        get:
            tags:
                - Comment
            operationId: Comment_GetCommentsFromAnArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.comment.v1.MultipleComments'
        post:
            tags:
                - Comment
            operationId: Comment_AddCommentsToAnArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.comment.v1.AddCommentsToAnArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.comment.v1.CommentReply'
    /api/articles/{slug}/comments/{id}:
        delete:
            tags:
                - Comment
            operationId: Comment_DeleteComment
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.comment.v1.DeleteCommentReply'
    /api/articles/{slug}/favorite:
        post:
            tags:
                - Article
            operationId: Article_FavoriteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.article.v1.FavoriteArticleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.article.v1.ArticleReply'
        delete:
            tags:
                - Article
            operationId: Article_UnfavoriteArticle
            parameters:
                - name: slug
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.article.v1.ArticleReply'
    /api/profiles/{username}:
        get:
            tags:
                - Profile
            operationId: Profile_GetProfile
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.profile.v1.ProfileReply'
    /api/profiles/{username}/follow:
        post:
            tags:
                - Profile
            operationId: Profile_FollowUser
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.profile.v1.FollowUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.profile.v1.ProfileReply'
        delete:
            tags:
                - Profile
            operationId: Profile_UnfollowUser
            parameters:
                - name: username
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.profile.v1.ProfileReply'
    /api/tags:
        get:
            tags:
                - Tag
            operationId: Tag_GetTags
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.tag.v1.GetTagReply'
    /api/user:
        get:
            tags:
                - User
            operationId: User_GetCurrentUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.GetCurrentUserReply'
        put:
            tags:
                - User
            operationId: User_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.v1.UpdateUserReply'
    /api/users:
        post:
            tags:
                - Auth
            operationId: Auth_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.RegisterReply'
    /api/users/login:
        post:
            tags:
                - Auth
            operationId: Auth_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.LoginReply'
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
components:
    schemas:
        api.article.v1.ArticleReply:
            type: object
            properties:
                slug:
                    type: string
                title:
                    type: string
                description:
                    type: string
                body:
                    type: string
                tagList:
                    type: array
                    items:
                        type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                favorited:
                    type: boolean
                favoritesCount:
                    type: integer
                    format: uint32
                author:
                    $ref: '#/components/schemas/api.article.v1.ArticleReply_Author'
        api.article.v1.ArticleReply_Author:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: boolean
        api.article.v1.ArticlesReply:
            type: object
            properties:
                articles:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.article.v1.ArticlesReply_Articles'
                articlesCount:
                    type: integer
                    format: uint32
        api.article.v1.ArticlesReply_Articles:
            type: object
            properties:
                slug:
                    type: string
                title:
                    type: string
                description:
                    type: string
                body:
                    type: string
                tagList:
                    type: array
                    items:
                        type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                favorited:
                    type: boolean
                favoritesCount:
                    type: integer
                    format: uint32
                author:
                    $ref: '#/components/schemas/api.article.v1.ArticlesReply_Author'
        api.article.v1.ArticlesReply_Author:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: boolean
        api.article.v1.CreateArticleRequest:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/api.article.v1.CreateArticleRequest_CreateArticle'
        api.article.v1.CreateArticleRequest_CreateArticle:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                body:
                    type: string
                tagList:
                    type: array
                    items:
                        type: string
        api.article.v1.DeleteArticleReply:
            type: object
            properties: {}
        api.article.v1.FavoriteArticleRequest:
            type: object
            properties:
                slug:
                    type: string
        api.article.v1.UpdateArticleRequest:
            type: object
            properties:
                article:
                    $ref: '#/components/schemas/api.article.v1.UpdateArticleRequest_UpdateArticle'
                slug:
                    type: string
        api.article.v1.UpdateArticleRequest_UpdateArticle:
            type: object
            properties:
                title:
                    type: string
                description:
                    type: string
                body:
                    type: string
                tagList:
                    type: array
                    items:
                        type: string
        api.auth.v1.LoginReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.auth.v1.LoginReply_User'
        api.auth.v1.LoginReply_User:
            type: object
            properties:
                email:
                    type: string
                token:
                    type: string
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
        api.auth.v1.LoginRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.auth.v1.LoginRequest_UserLogin'
        api.auth.v1.LoginRequest_UserLogin:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        api.auth.v1.RegisterReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.auth.v1.RegisterReply_User'
        api.auth.v1.RegisterReply_User:
            type: object
            properties:
                email:
                    type: string
                token:
                    type: string
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
        api.auth.v1.RegisterRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.auth.v1.RegisterRequest_Data'
        api.auth.v1.RegisterRequest_Data:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                password:
                    type: string
        api.comment.v1.AddCommentsToAnArticleRequest:
            type: object
            properties:
                comment:
                    $ref: '#/components/schemas/api.comment.v1.AddCommentsToAnArticleRequest_CommentRequest'
                slug:
                    type: string
        api.comment.v1.AddCommentsToAnArticleRequest_CommentRequest:
            type: object
            properties:
                body:
                    type: string
        api.comment.v1.CommentReply:
            type: object
            properties:
                comment:
                    $ref: '#/components/schemas/api.comment.v1.CommentReply_Comment'
        api.comment.v1.CommentReply_Author:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: boolean
        api.comment.v1.CommentReply_Comment:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                body:
                    type: string
                author:
                    $ref: '#/components/schemas/api.comment.v1.CommentReply_Author'
        api.comment.v1.DeleteCommentReply:
            type: object
            properties: {}
        api.comment.v1.MultipleComments:
            type: object
            properties:
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.comment.v1.MultipleComments_Comments'
        api.comment.v1.MultipleComments_Author:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: boolean
        api.comment.v1.MultipleComments_Comments:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                body:
                    type: string
                author:
                    $ref: '#/components/schemas/api.comment.v1.MultipleComments_Author'
        api.profile.v1.FollowUserRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.profile.v1.FollowUserRequest_User'
                username:
                    type: string
        api.profile.v1.FollowUserRequest_User:
            type: object
            properties:
                email:
                    type: string
        api.profile.v1.ProfileReply:
            type: object
            properties:
                profile:
                    $ref: '#/components/schemas/api.profile.v1.ProfileReply_Data'
        api.profile.v1.ProfileReply_Data:
            type: object
            properties:
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
                following:
                    type: boolean
        api.profile.v1.RegisterCelebRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.profile.v1.RegisterCelebRequest_User'
        api.profile.v1.RegisterCelebRequest_User:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
                username:
                    type: string
        api.tag.v1.GetTagReply:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
        api.user.v1.GetCurrentUserReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.GetCurrentUserReply_User'
        api.user.v1.GetCurrentUserReply_User:
            type: object
            properties:
                email:
                    type: string
                token:
                    type: string
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
        api.user.v1.UpdateUserReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdateUserReply_User'
        api.user.v1.UpdateUserReply_User:
            type: object
            properties:
                email:
                    type: string
                token:
                    type: string
                username:
                    type: string
                bio:
                    type: string
                image:
                    type: string
        api.user.v1.UpdateUserRequest:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.user.v1.UpdateUserRequest_User'
        api.user.v1.UpdateUserRequest_User:
            type: object
            properties:
                email:
                    type: string
                bio:
                    type: string
                image:
                    type: string
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
    - name: Article
    - name: Auth
    - name: Comment
    - name: Greeter
      description: The greeting service definition.
    - name: Profile
    - name: Tag
    - name: User
